name: Tests
on:
  workflow_call:
    inputs:
      from:
        required: true
        type: string
      templatePrefix:
        required: true
        type: string

# This will cancel in progress jobs if another job with the same ref gets started.
# Github run_id is a backup in case github.ref doesn't exist for some reason
concurrency:
  group: ${{ github.workflow }}-${{ github.ref || github.run_id }}
  cancel-in-progress: true

jobs:
  ci-checks:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - uses: actions/checkout@v4
      # TODO: caching this action would accelerate the run
      - name: corepack
        run: |
          corepack enable
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
          cache-dependency-path: package-lock.json
      - name: install
        run: |
          npm ci
      - name: commit-linting
        run: |
          if [[ "${{ github.base_ref }}" != "" ]]; then
            echo "Setting up git environment for commitlint of pull request"
            git fetch origin ${{ github.base_ref }}
            git fetch ${{ github.event.pull_request.head.repo.clone_url }} ${{ github.head_ref }}
            npx commitlint --from ${{ github.event.pull_request.head.sha }}~${{ github.event.pull_request.commits }} --to ${{ github.event.pull_request.head.sha }} --verbose
          else
            echo "Setting up git environment for commitlint of branch push"
            git fetch origin ${{ github.ref_name }} --unshallow
            npx commitlint --from $(git rev-list --max-parents=0 origin/${{ github.ref_name }})
          fi
      - name: build
        run: |
          npm run build
      - name: linting
        run: |
          npm run lint
          npm run format
      - name: testing
        run: |
          npm run test
      - name: bundle
        run: |
          npm run bundle

  no-committed-build:
    runs-on: ubuntu-latest
    if: ${{ github.base_ref }}
    steps:
      - id: bundle-changed-files
        name: Run the action
        uses: hanseltimeindustries/get-changed-files@v1
        with:
          format: 'space-delimited'
          filter: "lib/**/*"

      - name: No committed lib
        if: ${{ steps.bundle-changed-files.outputs.all }}
        shell: bash
        run: |
          echo "all files in lib/ directory are committed by the release process.  Please make sure not to commit your lib files!"
          exit 1

